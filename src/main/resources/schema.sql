DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS film_likes;
DROP TABLE IF EXISTS film_director;
DROP TABLE IF EXISTS film;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS mpa;
DROP TABLE IF EXISTS director;
DROP TABLE IF EXISTS relationship;
DROP TABLE IF EXISTS user_filmorate;

CREATE TABLE IF NOT EXISTS genre(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre varchar
);

CREATE TABLE IF NOT EXISTS mpa(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name_rate varchar
);

CREATE TABLE IF NOT EXISTS director(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name_director VARCHAR
);

CREATE TABLE IF NOT EXISTS film(
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar,
    description varchar,
    release_data timestamp,
    duration integer,
    mpa integer REFERENCES mpa(id),
    rate integer
);

CREATE TABLE IF NOT EXISTS film_genre(
    id_film INTEGER REFERENCES film (film_id),
    genre_id INTEGER REFERENCES genre(id)
);

CREATE TABLE IF NOT EXISTS film_director(
    film_id INTEGER REFERENCES film(film_id) ON delete CASCADE,
    director_id INTEGER REFERENCES director (id) ON delete CASCADE
);

CREATE TABLE IF NOT EXISTS user_filmorate(
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar,
    login varchar,
    name varchar,
    birthday timestamp(8)
);

CREATE TABLE IF NOT EXISTS film_likes(
    id_film INTEGER REFERENCES film(film_id),
    id_user INTEGER REFERENCES user_filmorate(user_id)
);

CREATE TABLE IF NOT EXISTS relationship(
    id INTEGER REFERENCES user_filmorate(user_id),
    id_friend INTEGER REFERENCES user_filmorate(user_id)
);